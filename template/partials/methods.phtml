<div class="method">
	<?php
	$class_name = (string) $this->xml->class->name;
	$method_class_name = isset($method->inherited) ? (string) $method->inherited->attributes()->from : $class_name;
	$method_name = (string) $method->name;

	$param_data = array();
	foreach ($method->docBlock->section as $section)
	{
		if (strtolower((string) $section->headline) === 'parameters')
		{
			$param_data = Util::process_parameters($section->contents->entry);
		}
	}

	$parameters = array();
	$inline_params = '';

	if (isset($method->parameters->parameter))
	{
		foreach ($method->parameters->parameter as $parameter)
		{
			if (isset($parameter->defaultValue))
			{
				$parameters[] = array(
					'$' . (string) $parameter->name,
					(string) $parameter->defaultValue
				);
			}
			else
			{
				$parameters[] = '$' . (string) $parameter->name;
			}
		}

		$inline_params = array();
		foreach ($parameters as $parameter)
		{
			if (is_array($parameter))
			{
				$inline_params[] = '[ ' . $parameter[0] . '<span class="parameterValue"> = ' . $parameter[1] . '</span>' . ' ]';
			}
			else
			{
				$inline_params[] = $parameter;
			}
		}
		$inline_params = ' ' . implode(', ', $inline_params) . ' ';
	}

	$class_map = array();
	$class_map[(string) $this->xml->class->name] = (string) $this->xml->class->summary->file;
	if (isset($this->xml->class->summary->parentClasses->class))
	{
		foreach ($this->xml->class->summary->parentClasses->class as $parentClass)
		{
			$class_map[(string) $parentClass->name] = (string) $parentClass->file;
		}
	}

	$class_file = $class_map[$method_class_name];

	?>

	<div class="title">
		<strong><?= (string) $method->name ?></strong> (<?= $inline_params ?>)
	</div>

	<div class="description">
		<? if (isset($method->docBlock->section->contents)): ?>
			<?= Markdown(Util::linkify_as_markdown(Util::entitize((string) $method->docBlock->section->contents))) ?>
		<? endif; ?>

		<? foreach ($method->docBlock->section as $section): ?>
			<? if ((string) $section->headline !== 'Method' && (string) $section->headline !== 'Parameters' && (string) $section->headline !== 'See Also'): ?>
				<h4><?= (string) $section->headline ?></h4>
				<? if (isset($section->contents)): ?>
					<? if (isset($section->contents->line)): ?>
						<? foreach ($section->contents->line as $line): ?>
							<?= Markdown(Util::linkify_as_markdown(Util::entitize(str_replace('_|_', '_ | _', $line)))) ?>
						<? endforeach; ?>
					<? endif; ?>
					<? if (isset($section->contents->entry)): ?>
						<ul class="parameterList">
						<? foreach ($section->contents->entry as $entry): ?>
							<li>
								<tt><?= (string) $entry->param ?></tt> - <?= Markdown(Util::linkify_as_markdown(Util::entitize((string) $entry->description))) ?>
							</li>
						<? endforeach; ?>
						</ul>
					<? endif; ?>
				<? endif; ?>

			<? elseif ((string) $section->headline === 'Parameters'): ?>
				<h4><?= (string) $section->headline ?></h4>
				<ul class="parameterList">
				<? foreach ($method->parameters->parameter as $p): ?>
					<? $name = (string) $p->name ?>
					<li>
						<?php
						// Handle multiple types
						$type = '';
						$name = isset($param_data['$' . $name]) ? '$' . $name : $name;
						$name = str_replace('$$', '$', $name);

						if (isset($param_data[$name]['type']))
						{
							if (is_array($param_data[$name]['type']))
							{
								$type = implode('</em> | <em>', $param_data[$name]['type']);
							}
							else
							{
								$type = $param_data[$name]['type'];
							}
						}
						?>
						<tt><?= $name ?></tt> - <em><?= $type ?></em> (<?= ((string) $p->required == 'true') ? 'Required' : 'Optional' ?>) <?= Markdown(Util::linkify_as_markdown(Util::entitize(@$param_data[$name]['description']))) ?>
					</li>
				<? endforeach; ?>
				</ul>

			<? elseif ((string) $section->headline === 'See Also'): ?>
				<h4><?= (string) $section->headline ?></h4>
				<ul>
				<? foreach ($section->contents->entry as $entry): ?>
					<li><a href="<?= (string) $entry->description ?>"><?= (string) $entry->param ?></a></li>
				<? endforeach; ?>
				</ul>

			<? endif; ?>

		<? endforeach; ?>

		<? if (isset($this->examples[$method_class_name][$method_name]) && $this->examples[$method_class_name][$method_name]): ?>
			<h4>Examples</h4>
			<div class="description highlight">
				<? foreach ($this->examples[$method_class_name][$method_name] as $path): ?>
					<?php
					$example = new Example($path);
					$sections = $example->sections();
					?>
					<h5><?= $sections['TEST'] ?></h5>
					<pre class="code ln-"><code class="php"><?= $example->display($sections['FILE']); ?></code></pre>
					<br><pre><?= $example->display($sections['EXPECT']); ?></pre>
				<? endforeach; ?>
			</div>
		<? endif; ?>

		<h4>Source</h4>
		<? $number_of_lines = ((int) $method->source->endLine - (int) $method->source->startLine) + 1; ?>
		<p class="parent"><em>Method defined in <a href="../<?= $class_name ?>/index.html"><?= $class_file ?></a></em> | <a href="" class="showsource">Toggle source view</a> (<?= $number_of_lines ?> lines)</p>
		<div class="source hide highlight">
			<pre class="code ln-<?= (int) $method->source->startLine ?>"><code class="php"><?= Util::clean_source((string) $method->source->code) ?></code></pre>
		</div>
	</div>

	<script type="text/javascript" charset="utf-8">
	$(function() {

		// Syntax highlighting
		ChiliBook.automatic = false;
		ChiliBook.lineNumbers = true;
		$('div.highlight pre').chili();
		$('div.highlight pre ol li:even').addClass('odd');

		// Toggle source view
		$('a.showsource').click(function() {
			$('div.source').slideToggle('fast');
			return false;
		});
	});
	</script>

</div>
