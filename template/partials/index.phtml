<div class="description">
	<?= Markdown(Util::linkify_as_markdown((string) $this->xml->class->fileData->docBlock->section->contents)); ?>

	<div class="sectiontitle">File Information</div>
	<?php
	@$arr = json_decode(json_encode($this->xml->class->fileData->docBlock));
	@$arr = $arr->section;
	@$arr = array_slice($arr, 1);
	?>

	<?php
	// Generate Markdown-friendly syntax, then pass it through.
	$finfo = '';
	if (is_array($arr))
	{
		foreach ($arr as $a)
		{
			if (isset($a->contents->line) && is_array($a->contents->line))
			{
				$finfo .= '* _' . $a->headline . '_' . PHP_EOL;
				foreach ($a->contents->line as $line)
				{
					$finfo .= '  * ' . (string) $line . PHP_EOL;
				}
			}
			elseif (isset($a->contents->line))
			{
				$finfo .= '* _' . $a->headline . '_ &mdash; ' . (string) $a->contents->line . PHP_EOL;
			}
			elseif (is_array($a->contents->entry))
			{
				foreach ($a->contents->entry as $entry)
				{
					$finfo .= '* _' . (string) $a->headline . '_  &mdash; [' . (string) $entry->param . '](' . (string) $entry->description . ')' . PHP_EOL;
				}
			}
			else
			{
				$finfo .= '* _' . (string) $a->headline . '_  &mdash; [' . (string) $a->contents->entry->param . '](' . (string) $a->contents->entry->description . ')' . PHP_EOL;
			}
		}
	}

	echo Markdown($finfo);
	?>

	<? if (isset($this->xml->class->methods->method)): ?>
		<div class="sectiontitle">Methods (<?= (string) $this->xml->class->methods->attributes()->count ?>)</div>
		<dl class="methods">
			<?php
			$method_list = Util::group_by_letter($this->xml->class->methods->method, 'name');
			?>

			<? foreach ($method_list as $letter => $methods): ?>
				<dt><?= strtoupper($letter) ?></dt>
				<dd>
					<ul>
						<? foreach ($methods as $method): ?>
							<li><a href="<?= $method ?>.html" rel="../../#m=<?= (string) $this->xml->class->name ?>/<?= $method ?>"><?= $method; ?></a></li>
						<? endforeach; ?>
					</ul>
				</dd>
			<? endforeach; ?>
		</dl>
	<? endif; ?>

	<? if (isset($this->xml->class->constants->constant)): ?>
		<div class="sectiontitle">Constants (<?= (string) $this->xml->class->constants->attributes()->count ?>)</div>
		<dl class="methods constants">
			<?php
			$constant_list = Util::group_by_letter($this->xml->class->constants->constant, 'name');
			?>

			<? foreach ($constant_list as $letter => $constants): ?>
				<dt><?= strtoupper($letter) ?></dt>
				<dd>
					<ul>
						<? foreach ($constants as $constant): ?>
							<li><a href="constants.html#<?= $constant ?>" rel="../../#c=<?= (string) $this->xml->class->name ?>/<?= $constant; ?>"><?= $constant; ?></a></li>
						<? endforeach; ?>
					</ul>
				</dd>
			<? endforeach; ?>
		</dl>
	<? endif; ?>

	<? if (isset($this->xml->class->properties->property)): ?>
		<div class="sectiontitle">Properties (<?= (string) $this->xml->class->properties->attributes()->count ?>)</div>
		<dl class="methods properties">
			<?php
			$property_list = Util::group_by_letter($this->xml->class->properties->property, 'name');
			?>

			<? foreach ($property_list as $letter => $properties): ?>
				<dt><?= strtoupper($letter) ?></dt>
				<dd>
					<ul>
						<? foreach ($properties as $property): ?>
							<li><a href="properties.html#<?= $property ?>" rel="../../#p=<?= (string) $this->xml->class->name ?>/<?= $property; ?>"><?= $property; ?></a></li>
						<? endforeach; ?>
					</ul>
				</dd>
			<? endforeach; ?>
		</dl>
	<? endif; ?>

	<div class="sectiontitle">Alternate Formats</div>
	<p><a href="../../xml/<?= $template['title'] ?>.xml">XML</a>, <a href="../../json/<?= $template['title'] ?>.js">JSON</a></p>
</div>
